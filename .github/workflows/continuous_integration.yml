name: Continuous Integration

on: [push, pull_request]

jobs:
  ubuntu-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        python-version:
          - 3.8.6
      fail-fast: false


    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
      
      - name: Configure poetry
        run: |
          python -m pip install poetry
          python -m poetry config virtualenvs.in-project true
          python -m poetry config virtualenvs.create true

      - name: Set up cache
        uses: actions/cache@v3
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Display Python version
        run: poetry run python -c "import sys; print(sys.version)"

      - name: Install Poetry
        run: |
          python -m poetry install

      - name: Install Tools
        run: |
          python -m pip install pytest

      - name: make .env file
        run: |
          cp .env.template .env

      - name: Run Tests
        run: |
          poetry run python manage.py test